Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> reStart
Rule 1     reStart -> re SEMI
Rule 2     re -> term
Rule 3     re -> re PLUS term
Rule 4     term -> factor
Rule 5     term -> term factor
Rule 6     factor -> niggle
Rule 7     factor -> factor STAR
Rule 8     niggle -> LETTER
Rule 9     niggle -> EPSILON
Rule 10    niggle -> LPAREN re RPAREN

Terminals, with rules where they appear

EPSILON              : 9
LETTER               : 8
LPAREN               : 10
PLUS                 : 3
RPAREN               : 10
SEMI                 : 1
STAR                 : 7
error                : 

Nonterminals, with rules where they appear

factor               : 4 5 7
niggle               : 6
re                   : 1 3 10
reStart              : 0
term                 : 2 3 5

Parsing method: LALR

state 0

    (0) S' -> . reStart
    (1) reStart -> . re SEMI
    (2) re -> . term
    (3) re -> . re PLUS term
    (4) term -> . factor
    (5) term -> . term factor
    (6) factor -> . niggle
    (7) factor -> . factor STAR
    (8) niggle -> . LETTER
    (9) niggle -> . EPSILON
    (10) niggle -> . LPAREN re RPAREN

    LETTER          shift and go to state 6
    EPSILON         shift and go to state 7
    LPAREN          shift and go to state 8

    reStart                        shift and go to state 1
    re                             shift and go to state 2
    term                           shift and go to state 3
    factor                         shift and go to state 4
    niggle                         shift and go to state 5

state 1

    (0) S' -> reStart .



state 2

    (1) reStart -> re . SEMI
    (3) re -> re . PLUS term

    SEMI            shift and go to state 9
    PLUS            shift and go to state 10


state 3

    (2) re -> term .
    (5) term -> term . factor
    (6) factor -> . niggle
    (7) factor -> . factor STAR
    (8) niggle -> . LETTER
    (9) niggle -> . EPSILON
    (10) niggle -> . LPAREN re RPAREN

    SEMI            reduce using rule 2 (re -> term .)
    PLUS            reduce using rule 2 (re -> term .)
    RPAREN          reduce using rule 2 (re -> term .)
    LETTER          shift and go to state 6
    EPSILON         shift and go to state 7
    LPAREN          shift and go to state 8

    factor                         shift and go to state 11
    niggle                         shift and go to state 5

state 4

    (4) term -> factor .
    (7) factor -> factor . STAR

    LETTER          reduce using rule 4 (term -> factor .)
    EPSILON         reduce using rule 4 (term -> factor .)
    LPAREN          reduce using rule 4 (term -> factor .)
    SEMI            reduce using rule 4 (term -> factor .)
    PLUS            reduce using rule 4 (term -> factor .)
    RPAREN          reduce using rule 4 (term -> factor .)
    STAR            shift and go to state 12


state 5

    (6) factor -> niggle .

    STAR            reduce using rule 6 (factor -> niggle .)
    LETTER          reduce using rule 6 (factor -> niggle .)
    EPSILON         reduce using rule 6 (factor -> niggle .)
    LPAREN          reduce using rule 6 (factor -> niggle .)
    SEMI            reduce using rule 6 (factor -> niggle .)
    PLUS            reduce using rule 6 (factor -> niggle .)
    RPAREN          reduce using rule 6 (factor -> niggle .)


state 6

    (8) niggle -> LETTER .

    STAR            reduce using rule 8 (niggle -> LETTER .)
    LETTER          reduce using rule 8 (niggle -> LETTER .)
    EPSILON         reduce using rule 8 (niggle -> LETTER .)
    LPAREN          reduce using rule 8 (niggle -> LETTER .)
    SEMI            reduce using rule 8 (niggle -> LETTER .)
    PLUS            reduce using rule 8 (niggle -> LETTER .)
    RPAREN          reduce using rule 8 (niggle -> LETTER .)


state 7

    (9) niggle -> EPSILON .

    STAR            reduce using rule 9 (niggle -> EPSILON .)
    LETTER          reduce using rule 9 (niggle -> EPSILON .)
    EPSILON         reduce using rule 9 (niggle -> EPSILON .)
    LPAREN          reduce using rule 9 (niggle -> EPSILON .)
    SEMI            reduce using rule 9 (niggle -> EPSILON .)
    PLUS            reduce using rule 9 (niggle -> EPSILON .)
    RPAREN          reduce using rule 9 (niggle -> EPSILON .)


state 8

    (10) niggle -> LPAREN . re RPAREN
    (2) re -> . term
    (3) re -> . re PLUS term
    (4) term -> . factor
    (5) term -> . term factor
    (6) factor -> . niggle
    (7) factor -> . factor STAR
    (8) niggle -> . LETTER
    (9) niggle -> . EPSILON
    (10) niggle -> . LPAREN re RPAREN

    LETTER          shift and go to state 6
    EPSILON         shift and go to state 7
    LPAREN          shift and go to state 8

    re                             shift and go to state 13
    term                           shift and go to state 3
    factor                         shift and go to state 4
    niggle                         shift and go to state 5

state 9

    (1) reStart -> re SEMI .

    $end            reduce using rule 1 (reStart -> re SEMI .)


state 10

    (3) re -> re PLUS . term
    (4) term -> . factor
    (5) term -> . term factor
    (6) factor -> . niggle
    (7) factor -> . factor STAR
    (8) niggle -> . LETTER
    (9) niggle -> . EPSILON
    (10) niggle -> . LPAREN re RPAREN

    LETTER          shift and go to state 6
    EPSILON         shift and go to state 7
    LPAREN          shift and go to state 8

    term                           shift and go to state 14
    factor                         shift and go to state 4
    niggle                         shift and go to state 5

state 11

    (5) term -> term factor .
    (7) factor -> factor . STAR

    LETTER          reduce using rule 5 (term -> term factor .)
    EPSILON         reduce using rule 5 (term -> term factor .)
    LPAREN          reduce using rule 5 (term -> term factor .)
    SEMI            reduce using rule 5 (term -> term factor .)
    PLUS            reduce using rule 5 (term -> term factor .)
    RPAREN          reduce using rule 5 (term -> term factor .)
    STAR            shift and go to state 12


state 12

    (7) factor -> factor STAR .

    STAR            reduce using rule 7 (factor -> factor STAR .)
    LETTER          reduce using rule 7 (factor -> factor STAR .)
    EPSILON         reduce using rule 7 (factor -> factor STAR .)
    LPAREN          reduce using rule 7 (factor -> factor STAR .)
    SEMI            reduce using rule 7 (factor -> factor STAR .)
    PLUS            reduce using rule 7 (factor -> factor STAR .)
    RPAREN          reduce using rule 7 (factor -> factor STAR .)


state 13

    (10) niggle -> LPAREN re . RPAREN
    (3) re -> re . PLUS term

    RPAREN          shift and go to state 15
    PLUS            shift and go to state 10


state 14

    (3) re -> re PLUS term .
    (5) term -> term . factor
    (6) factor -> . niggle
    (7) factor -> . factor STAR
    (8) niggle -> . LETTER
    (9) niggle -> . EPSILON
    (10) niggle -> . LPAREN re RPAREN

    SEMI            reduce using rule 3 (re -> re PLUS term .)
    PLUS            reduce using rule 3 (re -> re PLUS term .)
    RPAREN          reduce using rule 3 (re -> re PLUS term .)
    LETTER          shift and go to state 6
    EPSILON         shift and go to state 7
    LPAREN          shift and go to state 8

    factor                         shift and go to state 11
    niggle                         shift and go to state 5

state 15

    (10) niggle -> LPAREN re RPAREN .

    STAR            reduce using rule 10 (niggle -> LPAREN re RPAREN .)
    LETTER          reduce using rule 10 (niggle -> LPAREN re RPAREN .)
    EPSILON         reduce using rule 10 (niggle -> LPAREN re RPAREN .)
    LPAREN          reduce using rule 10 (niggle -> LPAREN re RPAREN .)
    SEMI            reduce using rule 10 (niggle -> LPAREN re RPAREN .)
    PLUS            reduce using rule 10 (niggle -> LPAREN re RPAREN .)
    RPAREN          reduce using rule 10 (niggle -> LPAREN re RPAREN .)

